apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  namespace: rental-platform
  labels:
    app: payment-service
    component: backend
    part-of: rental-platform
    pci-compliant: "true"
    version: "1.0.0"
  annotations:
    description: "Payment processing service for rental platform"
    security.compliance/pci-dss: "true"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3004"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: payment-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: payment-service
        security-tier: restricted
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3004"
        prometheus.io/path: "/metrics"
        security.alpha.kubernetes.io/sysctls: "net.ipv4.tcp_timestamps=0"
        container.apparmor.security.beta.kubernetes.io/payment-service: "runtime/default"
    spec:
      serviceAccountName: payment-service-sa
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
      containers:
        - name: payment-service
          image: projectx/payment-service:1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 3004
              protocol: TCP
              name: http
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          livenessProbe:
            httpGet:
              path: /health
              port: 3004
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 3004
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /startup
              port: 3004
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 30
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3004"
            - name: SERVICE_VERSION
              value: "1.0.0"
            - name: STRIPE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: payment-secrets
                  key: STRIPE_SECRET_KEY
            - name: STRIPE_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: payment-secrets
                  key: STRIPE_WEBHOOK_SECRET
            - name: STRIPE_ENDPOINT_SECRET
              valueFrom:
                secretKeyRef:
                  name: payment-secrets
                  key: STRIPE_ENDPOINT_SECRET
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: rental-platform-config
                  key: LOG_LEVEL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: payment-certs
              mountPath: /etc/payment-service/certs
              readOnly: true
            - name: config-volume
              mountPath: /etc/payment-service/config
              readOnly: true
      volumes:
        - name: tmp
          emptyDir: {}
        - name: payment-certs
          secret:
            secretName: payment-service-certs
        - name: config-volume
          configMap:
            name: rental-platform-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - payment-service
                topologyKey: kubernetes.io/hostname
      tolerations:
        - key: payment-workload
          operator: Equal
          value: "true"
          effect: NoSchedule
      terminationGracePeriodSeconds: 60