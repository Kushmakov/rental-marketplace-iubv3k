# Authentication Service Deployment and Service Configuration
# Version: 1.0.0
# Enhanced security and high availability configuration for production deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: rental-platform
  labels:
    app: auth-service
    component: authentication
    tier: backend
    version: "1.0.0"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: auth-service
      component: authentication
      tier: backend
  template:
    metadata:
      labels:
        app: auth-service
        component: authentication
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: auth-service-sa
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - auth-service
              topologyKey: kubernetes.io/hostname
      containers:
        - name: auth-service
          image: projectx/auth-service:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          env:
            - name: NODE_ENV
              value: "production"
            - name: AUTH_SERVICE_PORT
              value: "3001"
            - name: AUTH_SERVICE_HOST
              value: "0.0.0.0"
            - name: LOG_LEVEL
              value: "info"
            - name: JWT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: JWT_PRIVATE_KEY
            - name: JWT_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: JWT_PUBLIC_KEY
            - name: JWT_KEY_PASSPHRASE
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: JWT_KEY_PASSPHRASE
            - name: OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: OAUTH_CLIENT_ID
            - name: OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: OAUTH_CLIENT_SECRET
            - name: MFA_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: auth-secrets
                  key: MFA_ENCRYPTION_KEY
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: auth-service-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: auth-service-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: auth-service-config
                  key: DB_NAME
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/startup
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: auth-config
              mountPath: /app/config
              readOnly: true
            - name: auth-secrets
              mountPath: /app/secrets
              readOnly: true
      volumes:
        - name: tmp
          emptyDir: {}
        - name: auth-config
          configMap:
            name: auth-service-config
        - name: auth-secrets
          secret:
            secretName: auth-secrets
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: rental-platform
  labels:
    app: auth-service
    component: authentication
    tier: backend
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3001
      targetPort: http
      protocol: TCP
    - name: metrics
      port: 9090
      targetPort: metrics
      protocol: TCP
  selector:
    app: auth-service
    component: authentication
    tier: backend
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: auth-service-pdb
  namespace: rental-platform
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: auth-service
      component: authentication
      tier: backend