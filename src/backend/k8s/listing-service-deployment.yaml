apiVersion: apps/v1
kind: Deployment
metadata:
  name: listing-service
  namespace: rental-platform
  labels:
    app: listing-service
    component: backend
    part-of: rental-platform
    version: 1.0.0
    managed-by: kubernetes
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '3002'
    prometheus.io/path: '/metrics'
spec:
  replicas: 3
  selector:
    matchLabels:
      app: listing-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: listing-service
        component: backend
        version: 1.0.0
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: listing-service
        image: projectx/listing-service:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3002
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30
        envFrom:
        - configMapRef:
            name: listing-service-config
        - secretRef:
            name: elasticsearch-secrets
        - secretRef:
            name: postgres-secrets
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - listing-service
              topologyKey: kubernetes.io/hostname